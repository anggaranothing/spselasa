/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.anggaranothing.pakar.dyslexia.client;

import com.anggaranothing.pakar.dyslexia.model.Disease;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.jdesktop.swingx.JXTaskPane;

/**
 *
 * @author AnggaraNothing
 */
public class FrameDiagnosticResult extends javax.swing.JInternalFrame {

    private Map<Disease,Float> dssMap = new HashMap<Disease,Float>();
    
    public FrameDiagnosticResult( Map<Disease,Float> dssMap ) {
        initComponents();
        
        this.dssMap = dssMap;
    }
    
    /**
     * Creates new form FrameDiagnosticResult
     */
    public FrameDiagnosticResult() {
        initComponents();
    }

    private boolean isFrameReady() {
        return !busyLabel.isVisible();
    }
    
    public JXTaskPane createNewTaskPane( Disease dss, Float persen, boolean isCollapsed ) {
        JXTaskPane taskPane = new JXTaskPane( String.format( "%.2f%% %s" , persen , dss.getName() ) );
        PanelDiagnosticResult panel = new PanelDiagnosticResult( persen, dss );
        taskPane.add( panel );
        taskPane.setVisible( true );
        taskPane.setCollapsed( isCollapsed );
        return taskPane;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tpContainerMain = new org.jdesktop.swingx.JXTaskPaneContainer();
        taskpaneEmpty = new org.jdesktop.swingx.JXTaskPane();
        jLabel1 = new javax.swing.JLabel();
        busyLabel = new org.jdesktop.swingx.JXBusyLabel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Diagnostic Result\n");
        setMinimumSize(new java.awt.Dimension(641, 200));
        setPreferredSize(new java.awt.Dimension(641, 200));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        org.jdesktop.swingx.VerticalLayout verticalLayout1 = new org.jdesktop.swingx.VerticalLayout();
        verticalLayout1.setGap(14);
        tpContainerMain.setLayout(verticalLayout1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("This diagnostic doesn't have any result(s).");
        taskpaneEmpty.getContentPane().add(jLabel1);

        tpContainerMain.add(taskpaneEmpty);

        jScrollPane1.setViewportView(tpContainerMain);

        busyLabel.setText("Loading...");
        busyLabel.setBusy(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
            .addComponent(busyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(busyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        Main.frameMap.remove( getClass().getName() );
    }//GEN-LAST:event_formInternalFrameClosing

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        new Thread(new Runnable() { public void run(){
            busyLabel.setVisible( true );

            taskpaneEmpty.setVisible( false );
            if( dssMap != null && dssMap.isEmpty() == false ) {
                if( tpContainerMain.getComponentCount() > 0 )
                    tpContainerMain.removeAll();

                // Urutkan berdasarkan persentase
                List<Map.Entry<Disease,Float>> entries =
                  new ArrayList<Map.Entry<Disease,Float>>(dssMap.entrySet());
                Collections.sort(entries, new Comparator<Map.Entry<Disease,Float>>() {
                  public int compare(Map.Entry<Disease,Float> a, Map.Entry<Disease,Float> b){
                    return b.getValue().compareTo(a.getValue());
                  }
                });
                Map<Disease,Float> sortedMap = new LinkedHashMap<Disease,Float>();
                for (Map.Entry<Disease,Float> entry : entries) {
                  sortedMap.put(entry.getKey(), entry.getValue());
                }
                
                int iterator = 0;
                for( Map.Entry<Disease,Float> entry : sortedMap.entrySet() ) {
                    float cfToPercent = entry.getValue();
                    if( cfToPercent >= ClientConfig.getDiagnosticResultMinPercentage() ) {
                        tpContainerMain.add( createNewTaskPane( entry.getKey(), cfToPercent, iterator > 0 ) );
                        iterator++;
                    }
                }
            }
            else {
                taskpaneEmpty.setVisible( true );
            }
            
            busyLabel.setVisible( false );
        } }).start();
        try {
            this.setMaximum( true );
        } catch (PropertyVetoException ex) {}
    }//GEN-LAST:event_formComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXBusyLabel busyLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTaskPane taskpaneEmpty;
    private org.jdesktop.swingx.JXTaskPaneContainer tpContainerMain;
    // End of variables declaration//GEN-END:variables
}
