/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.anggaranothing.pakar.dyslexia.client;

import java.awt.event.WindowEvent;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author AnggaraNothing
 */
public final class Main extends javax.swing.JFrame {

    public static final Logger LOGGER = LoggerFactory.getLogger( Main.class );
    
    public static final String APP_NAME = "Sistem Pakar Dyslexia \"SELASA\" Client";
    public static final String APP_VER  = "1.0.0 Beta";
    
    static ContainerMap frameMap = new ContainerMap();
    static Session userSession = new Session();
    
    private Thread userThread;
    
    public static String getAppInfo() {
        return String.format( "%s %s" , APP_NAME, APP_VER );
    }
    
    private static void doInitConfig() {
        if( !ClientConfig.Init() ) {
            JOptionPane.showMessageDialog( null, "Config file failed to load !\nExiting...", null, JOptionPane.ERROR_MESSAGE ); 
            System.exit( ErrorCode.CONFIG_FAILED_LOAD );
        }
    }
    
    private void checkIfUserAlreadyLogged() {
        try {
            userSession.setUser( Helper.getLoggedUser() );
        } catch (NotBoundException ex) {
        } catch (MalformedURLException ex) {
        } catch (RemoteException ex) {
        }
    }
    
    protected static void doLogout() {
        try {
            Helper.doLogout();
        } catch (NotBoundException ex) {
        } catch (MalformedURLException ex) {
        } catch (RemoteException ex) {
        }
    }
    
    private void checkUserSessionStatus() {
        if( userThread != null && userThread.isAlive() ) return;
        
        userThread = new Thread(new Runnable() { public void run(){
            updateUsernameBar();
            updateLogMenuState();
        }});
        userThread.start();
    }
    
    private void updateUsernameBar() {
        String userName = "guest";
        if( userSession.isUserLogged() && userSession.getUser().getName() != null && !userSession.getUser().getName().isEmpty() )
            userName = userSession.getUser().getName();
        
        userNameBar.setText( String.format( "Welcome, %s!" , userName ) );
    }
    
    private void updateLogMenuState() {
        menuFileLogin.setEnabled(  !userSession.isUserLogged() );
        menuFileLogout.setEnabled( userSession.isUserLogged() );
    }
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }
    
    protected void attachToDesktop( javax.swing.JInternalFrame frame , boolean isCentered ) {
        Helper.attachToDesktop( jDesktopPane , frame , isCentered );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuMainFile = new javax.swing.JMenu();
        menuFileConnect = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuFileLogin = new javax.swing.JMenuItem();
        menuFileLogout = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        menuFileExit = new javax.swing.JMenuItem();
        menuMainEdit = new javax.swing.JMenu();
        menuMainHelp = new javax.swing.JMenu();
        menuHelpAbout = new javax.swing.JMenuItem();
        userNameBar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(getAppInfo());
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout jDesktopPaneLayout = new javax.swing.GroupLayout(jDesktopPane);
        jDesktopPane.setLayout(jDesktopPaneLayout);
        jDesktopPaneLayout.setHorizontalGroup(
            jDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        jDesktopPaneLayout.setVerticalGroup(
            jDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 459, Short.MAX_VALUE)
        );

        menuMainFile.setText("File");

        menuFileConnect.setText("Connect...");
        menuFileConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileConnectActionPerformed(evt);
            }
        });
        menuMainFile.add(menuFileConnect);
        menuMainFile.add(jSeparator1);

        menuFileLogin.setText("Login");
        menuFileLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileLoginActionPerformed(evt);
            }
        });
        menuMainFile.add(menuFileLogin);

        menuFileLogout.setText("Logout");
        menuFileLogout.setEnabled(false);
        menuFileLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileLogoutActionPerformed(evt);
            }
        });
        menuMainFile.add(menuFileLogout);
        menuMainFile.add(jSeparator2);

        menuFileExit.setText("Exit");
        menuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileExitActionPerformed(evt);
            }
        });
        menuMainFile.add(menuFileExit);

        jMenuBar1.add(menuMainFile);

        menuMainEdit.setText("Edit");
        jMenuBar1.add(menuMainEdit);

        menuMainHelp.setText("Help");

        menuHelpAbout.setText("About");
        menuHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHelpAboutActionPerformed(evt);
            }
        });
        menuMainHelp.add(menuHelpAbout);

        jMenuBar1.add(menuMainHelp);

        userNameBar.setText("Welcome, guest!");
        userNameBar.setFocusable(false);
        userNameBar.setHideActionText(true);
        jMenuBar1.add(userNameBar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileExitActionPerformed
        // TODO add your handling code here:
        //System.exit( ErrorCode.SUCCESS );
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_menuFileExitActionPerformed

    private void menuFileConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileConnectActionPerformed
        // TODO add your handling code here:
        Helper.attachToFrame( this, new MenuConnect(), true );
    }//GEN-LAST:event_menuFileConnectActionPerformed

    private void menuHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHelpAboutActionPerformed
        // TODO add your handling code here:
        Helper.attachToFrame( this, new MenuAbout(), true );
    }//GEN-LAST:event_menuHelpAboutActionPerformed

    private void menuFileLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileLoginActionPerformed
        // TODO add your handling code here:
        MenuLogin frmMenuLogin = new MenuLogin();
        frmMenuLogin.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                checkUserSessionStatus();
            }
        });
        
        Helper.attachToFrame( this, frmMenuLogin, true );
    }//GEN-LAST:event_menuFileLoginActionPerformed

    private void menuFileLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileLogoutActionPerformed
        // TODO add your handling code here:
        if( JOptionPane.showConfirmDialog( this, "Are you sure ?", "Logout", JOptionPane.YES_NO_OPTION ) == 0 ) {
            doLogout();
            checkUserSessionStatus();
        }
    }//GEN-LAST:event_menuFileLogoutActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        doLogout();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        checkIfUserAlreadyLogged();
        checkUserSessionStatus();
        attachToDesktop( new FrameLauncher() , false );
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        checkUserSessionStatus();
    }//GEN-LAST:event_formWindowActivated

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
        // TODO add your handling code here:
        checkUserSessionStatus();
    }//GEN-LAST:event_formWindowDeiconified

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        checkUserSessionStatus();
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        checkUserSessionStatus();
    }//GEN-LAST:event_formMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                doInitConfig();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem menuFileConnect;
    private javax.swing.JMenuItem menuFileExit;
    private javax.swing.JMenuItem menuFileLogin;
    private javax.swing.JMenuItem menuFileLogout;
    private javax.swing.JMenuItem menuHelpAbout;
    private javax.swing.JMenu menuMainEdit;
    private javax.swing.JMenu menuMainFile;
    private javax.swing.JMenu menuMainHelp;
    private javax.swing.JMenu userNameBar;
    // End of variables declaration//GEN-END:variables
}
